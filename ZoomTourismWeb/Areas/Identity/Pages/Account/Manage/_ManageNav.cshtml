@using ZoomTourism.Models;
@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<head>
    <link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />
</head>

<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)"
            id="profile" asp-page="./Index">Profile</a>
    </li>
    <li class="nav-item">
        <a class="selected nav-link @ManageNavPages.EmailNavClass(ViewContext)"
            id="email" asp-page="./Email">Email</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)"
           id="change-password" asp-page="./ChangePassword">Password</a>
    </li>
   @if (hasExternalLogins)
    {
                <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)"
           id="personal-data" asp-page="./PersonalData">Personal data</a>
    </li>
    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
          asp-route-returnUrl="@Url.Action(" Index", "Home" , new { area="" })">
        <button id="logout" type="submit" class="nav-link btn btn-link ">Logout</button>
    </form>
</ul>

