@using ZoomTourism.Models;

@model IEnumerable<Trip>

<head>
    <link rel="stylesheet" href="~/css/PrivateTrips.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/form.css" asp-append-version="true" />

</head>

<div class="form-container">
      

<div class="inputQue">
    <label class="form-label" for="full-name">Full Name:</label>
        <input class="form-input" type="text" id="full-name">
</div>

<div class="inputQue">
    <label class="form-label" for="plan-date">When Are you planning to take your trip?</label>
        <input class="form-input" type="date" id="plan-date">

</div>

<div class="trips-choosing-container">
    <h2>Select your desired destinations: </h2>
    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Search for trips...">
    </div>

        <ul id="selected-destinations" class="blogBox">
      @foreach (var Trip in Model.OrderByDescending(p => p.CreatedDate).ToList())
            {
        <li class="trip-choosing">
            <label>
                        <input type="checkbox" name="selectedDestinations" value="@Trip.Title">
                <div class="trip-choosing-content">
                        <img src="@Trip.ImageUrl" height="100px" alt="">
                        <h3>@Trip.Title</h3>
                </div>
            </label>
        </li>
            }

            
    </ul>
        <input class="form-input" type="text" id="destinations-list">
    <button id="viewAllButton">View All</button>
    <button id="showLessButton" style="display: none;">Show Less</button>

</div>

<div class="inputQue">
    <label class="form-label" for="pickup-location">How many people are going?</label>
    <input class="form-input" type="number" id="numOfPeople">
</div>

<div class="inputQue">
    <label class="form-label" for="dropoff-location">any other notes you want to add?</label>
    <input class="form-input" type="text" id="notes">

</div>

    <button id="whatsapp-button">WhatsApp</button>

</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Initialize an empty array to store selected destinations
        var selectedDestinations = [];

        $('input[type="checkbox"]').on('change', function () {
            var checkbox = $(this);
            var tripTitle = checkbox.closest('label').find('h3').text();

            if (checkbox.prop('checked')) {
                // If the checkbox is checked, add the destination to the list
                selectedDestinations.push(tripTitle);
            } else {
                // If the checkbox is unchecked, remove the destination from the list
                var index = selectedDestinations.indexOf(tripTitle);
                if (index > -1) {
                    selectedDestinations.splice(index, 1);
                }
            }

            // Update the destinations list input
            updateDestinationsInput();
        });

        var $tripItems = $('.trip-choosing');
        var $viewAllButton = $('#viewAllButton');
        var $showLessButton = $('#showLessButton');
        var $searchInput = $('#searchInput');
        var initialItemCount = 6;

        // Initially hide extra items beyond the specified number
        $tripItems.slice(initialItemCount).addClass('hidden');

        // Check if there are more than 6 trips to show the "View All" button
        if ($tripItems.length > initialItemCount) {
            $viewAllButton.show();
        }

        // Show all items and hide "View All" button when "View All" is clicked
        $viewAllButton.on('click', function () {
            $tripItems.removeClass('hidden');
            $viewAllButton.hide();
            $showLessButton.show();
        });

        // Hide extra items and show "View All" button when "Show Less" is clicked
        $showLessButton.on('click', function () {
            $tripItems.slice(initialItemCount).addClass('hidden');
            $showLessButton.hide();
            $viewAllButton.show();
        });

        // Search functionality
        $searchInput.on('input', function () {
            var searchTerm = $(this).val().toLowerCase();
            $tripItems.each(function () {
                var tripTitle = $(this).find('h3').text().toLowerCase();
                if (tripTitle.includes(searchTerm) || searchTerm === '') {
                    $(this).removeClass('hidden');
                } else {
                    $(this).addClass('hidden');
                }
            });
        });

        // Function to update the destinations list input
        function updateDestinationsInput() {
            $('#destinations-list').val(selectedDestinations.join(', '));
        }

        // WhatsApp button click event
        $('#whatsapp-button').on('click', function () {
            // Get the values from the form inputs
            var fullName = $('#full-name').val();
            var planDate = $('#plan-date').val();
            var destinations = $('#destinations-list').val();
            var peopleCount = $('#numOfPeople').val();
            var notes = $('#notes').val();

            // Create the WhatsApp message text with the form data
            var message = "Hi, I'm interested in planning a trip. Here are my details:\n\n";
            message += "Full Name: " + fullName + "\n";
            message += "Trip Date: " + planDate + "\n";
            message += "Destinations I'm interested in: " + destinations + "\n";
            message += "Number of People: " + peopleCount + "\n";
            message += "Additional Notes: " + notes;

            // Encode the message for a WhatsApp link
            var encodedMessage = encodeURIComponent(message);

            // Create the WhatsApp link
            var whatsappLink = "https://api.whatsapp.com/send?phone=PHONE_NUMBER&text=" + encodedMessage;
            // Replace 'PHONE_NUMBER' with the actual WhatsApp phone number you want to send the message to.

            // Open the WhatsApp link in a new tab
            window.open(whatsappLink);
        });
    });


</script>
